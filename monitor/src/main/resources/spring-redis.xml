<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

  <!-- 自动扫描 -->
  <context:component-scan
    base-package="com.gsir.monitor.common.utils" />

  <!-- redis数据源 -->
  <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <!-- 最大连接数 -->
    <!-- <property name="maxTotal" value="30" /> 最大空闲连接数 <property name="maxIdle" 
      value="10" /> 每次释放连接的最大数目 <property name="numTestsPerEvictionRun" value="1024" 
      /> 释放连接的扫描间隔（毫秒） <property name="timeBetweenEvictionRunsMillis" value="30000" 
      /> 连接最小空闲时间 <property name="minEvictableIdleTimeMillis" value="1800000" /> 
      连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 <property name="softMinEvictableIdleTimeMillis" 
      value="10000" /> 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 <property name="maxWaitMillis" 
      value="1500" /> 在获取连接的时候检查有效性, 默认false <property name="testOnBorrow" value="true" 
      /> 在空闲时检查有效性, 默认false <property name="testWhileIdle" value="true" /> 连接耗尽时是否阻塞, 
      false报异常,ture阻塞直到超时, 默认true <property name="blockWhenExhausted" value="false" 
      /> -->
    <property name="maxIdle" value="100" />
    <property name="minIdle" value="8" />
    <property name="maxWaitMillis" value="-1" />
    <property name="testOnBorrow" value="true" />

  </bean>
  <!-- Spring-redis连接池管理工厂 -->
  <bean id="connectionFactory"
    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    <property name="poolConfig" ref="poolConfig" />
    <!-- 端口号 -->
    <property name="hostName" value="${redis.host}" />
    <!-- IP地址 -->
    <property name="port" value="${redis.port}" />
    <!-- 密码 -->
    <property name="password" value="${redis.password}" />
    <!-- 超时时间 -->
    <property name="timeout" value="-1" />
  </bean>
  <!-- redis操作模板，面向对象的模板 -->
  <bean id="stringRedisSerializer"
    class="org.springframework.data.redis.serializer.StringRedisSerializer" />
  <bean id="jdkSerializationRedisSerializer"
    class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
  <bean id="stringRedisTemplate"
    class="org.springframework.data.redis.core.StringRedisTemplate">
    <property name="connectionFactory" ref="connectionFactory" />
    <!-- 如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 -->
    <property name="keySerializer" ref="stringRedisSerializer"></property>
    <property name="valueSerializer"
      ref="jdkSerializationRedisSerializer">
    </property>
  </bean>

  <bean id="redisTemplate"
    class="org.springframework.data.redis.core.RedisTemplate"
    p:connectionFactory-ref="connectionFactory"
    p:keySerializer-ref="stringRedisSerializer"
    p:hashKeySerializer-ref="stringRedisSerializer" />
</beans>